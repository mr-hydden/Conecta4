Registro de decisiones:

	1) Reservar la página de memoria 0xEE00-0xEEFF para 
	objetos dinamicos.
		Existe un objeto estático global siguiente_posicion_dinamica
	que contiene la siguiente direccion, en la pagina citada, en la
	cual se puede almacenar informacion dinamica. La subrutina que
	la utilice, debe actualizarla.
	
	2) Representacion interna del tablero: cadena de caracteres
	por filas. 
	Visualmente, en el main.asm se ve asi:
	
			"       " <- Parte de arriba de un tablero fisico
			"       "			
			"       "
			"       "
			"       "
			"       " <- Parte que se apoya sobre la mesa
			
	Lo cual corresponderia con como verias un tablero fisico. La
	posicion (0,0) seria entonces la de arriba a la izquierda.
	Asi, la posicion (i,j) se obtendria como: tablero + j + i*numCols
		La posicion del tablero es fija y solo la conoce main:
	debe pasarsela como parametro a otras subrutinas (e.g., a traves
	de los registros X o Y). El tablero solo pueden modificarlo las
	funciones hechas para eso.
		
	3) Existe una funcion, lda_fichaJugador, que lo que hace es
	precisamente eso: cargar en A la ficha del jugador que tiene
	el turno (una X o una O). OJO: la funcion solo debe usarse
	una vez por turno, y la ficha no debe perderse: la funcion
	modifica un objeto estatico fichaJugador cada vez que es usada
	(cambia el turno).
	
	
	4) La funcion posicion_ij devuelve en Y la direccion de memoria
	de la posicion ij del tablero, dada i (fila) y j (columna) en 
	A y B, respectivamente, y la posicion base del tablero en X.
	
	
	5) La idea es que no haya un tablero declarado en main, sino
	una variable puntero_a_tablero que contenga su direccion. La
	funcion generarTablero crea un tablero en tiempo de ejecucion
	cuya direccion se puede almacenar en dicha variable.

	
	6) Las constantes numFils y numCols deben ser de las unicas
	(si no las unicas) que conozcan todas las subrutinas. Como se
	usan tanto, no merece la pena pasarlas por parametro. En otros
	casos, es preferible declarar una etiqueta en el fuente de la
	funcion en cuestion, y utilizarla para paso por parametro, o
	el uso de la pila como almacen temporal.
	
	
	
	
	
	
	
	
								
